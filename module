class Event(School):
    def__ init__(self, name,date,manager,time,menu, decoration , required_stock, participates, guests ,location,description):
        self.name = name
        self.date = date
        self.manager = manager
        self.time = time
        self.menu = menu
        self.dectoration = decoration
        self.required_stock = required_stock
        self.participates = participates
        self.guests = guests
        self.location = location
        self.description = description

class stock(School):
    def __init__(self, name, quantity, price_per_item, category, supplier):
        self.name = name
        self.quantity = quantity
        self.price_per_item = price_per_item
        self.category = category 
        self.supplier = supplier

    def getstock(self):
        total_value = self.quantity * self.price_per_item
        return {
            "name": self.name,
            "quantity": self.quantity,
            "price_per_item": self.price_per_item,
            "total_value": total_value,
            "category" : self.category,
            "supplier": self.supplier
 }

class Exam:
    def __init__(self, questions):
        """
        Initialize the exam with a list of questions.

        Args:
            questions (list): A list of tuples containing the question, options, and correct answer.
        """
        self.questions = questions
        self.scores = {}

    def take_exam(self, student_name):
        """
        Simulate the exam for a student.

        Args:
            student_name (str): The name of the student taking the exam.
        """
        score = 0
        for i, (question, options, correct_answer) in enumerate(self.questions):
            print(f"\nQuestion {i+1}: {question}")
            for j, option in enumerate(options):
                print(f"{j+1}. {option}")
            answer = input("Enter your answer (1-{}): ".format(len(options)))
            if options[int(answer) - 1] == correct_answer:
                score += 1
                print("Correct answer!")
            else:
                print(f"Incorrect answer. The correct answer is {correct_answer}.")
        self.scores[student_name] = score
        print(f"\nYour score is {score} out of {len(self.questions)}.")

    def display_scores(self):
        """
        Display the scores of all students who have taken the exam.
        """
        print("\nExam Scores:")
        for student, score in self.scores.items():
            print(f"{student}: {score} out of {len(self.questions)}")


def main():
    # Define the exam questions
    questions = [
        ("What is the capital of France?", ["Paris", "London", "Berlin", "Rome"], "Paris"),
        ("What is the largest planet in our solar system?", ["Earth", "Saturn", "Jupiter", "Uranus"], "Jupiter"),
        ("Who painted the Mona Lisa?", ["Leonardo da Vinci", "Michelangelo", "Raphael", "Caravaggio"], "Leonardo da Vinci"),
    ]

    # Create an instance of the Exam class
    exam = Exam(questions)

    # Take the exam
    student_name = input("Enter your name: ")
    exam.take_exam(student_name)

    # Display the scores
    exam.display_scores()


if __name__ == "__main__":
    main()

class Student(School):
    def __init__(
        self,
        student_id,
        student_name,
        student_f_name,
        student_phone_number,
        student_address,
        student_fees
        ):
        self.student_id = student_id
        self.student_name = student_name
        self.student_f_name = student_f_name
        self.student_phone_number = student_phone_number
        self.student_address = student_address
        self.student_fees = student_fees

    def getStudent(self):
        return f"id = {self.student_id}, name = {self.student_name}, father name = {self.student_f_name}, phone number = {self.student_phone_number}, address = {self.student_address}, fee = {self.student_fees}"
